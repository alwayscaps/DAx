
TX_Node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000888  0000091c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000888  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080010c  0080010c  00000928  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000958  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bfa  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f1  00000000  00000000  0000269a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008c6  00000000  00000000  0000308b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00003954  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c6  00000000  00000000  00003c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e87  00000000  00000000  00004342  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000051c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e8       	ldi	r30, 0x88	; 136
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 31       	cpi	r26, 0x11	; 17
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8f 00 	call	0x11e	; 0x11e <main>
  9e:	0c 94 42 04 	jmp	0x884	; 0x884 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_INIT>:
void process_message(char *message) {
	if (strcmp(message, "ON") == 0)
	set_led_high();
	else if (strcmp(message, "OFF") == 0)
	set_led_low();
}
  a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  aa:	83 e3       	ldi	r24, 0x33	; 51
  ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  b0:	88 e1       	ldi	r24, 0x18	; 24
  b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  b6:	86 e0       	ldi	r24, 0x06	; 6
  b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  bc:	08 95       	ret

000000be <USART_SEND>:
  be:	e0 ec       	ldi	r30, 0xC0	; 192
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	90 81       	ld	r25, Z
  c4:	95 ff       	sbrs	r25, 5
  c6:	fd cf       	rjmp	.-6      	; 0xc2 <USART_SEND+0x4>
  c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  cc:	08 95       	ret

000000ce <setup_rf>:
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF24L01_init>
  d6:	ec 01       	movw	r28, r24
  d8:	85 e2       	ldi	r24, 0x25	; 37
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	99 83       	std	Y+1, r25	; 0x01
  de:	88 83       	st	Y, r24
  e0:	22 e0       	ldi	r18, 0x02	; 2
  e2:	2a 83       	std	Y+2, r18	; 0x02
  e4:	9c 83       	std	Y+4, r25	; 0x04
  e6:	8b 83       	std	Y+3, r24	; 0x03
  e8:	21 e0       	ldi	r18, 0x01	; 1
  ea:	2d 83       	std	Y+5, r18	; 0x05
  ec:	9f 83       	std	Y+7, r25	; 0x07
  ee:	8e 83       	std	Y+6, r24	; 0x06
  f0:	25 e0       	ldi	r18, 0x05	; 5
  f2:	28 87       	std	Y+8, r18	; 0x08
  f4:	9a 87       	std	Y+10, r25	; 0x0a
  f6:	89 87       	std	Y+9, r24	; 0x09
  f8:	23 e0       	ldi	r18, 0x03	; 3
  fa:	2b 87       	std	Y+11, r18	; 0x0b
  fc:	9d 87       	std	Y+13, r25	; 0x0d
  fe:	8c 87       	std	Y+12, r24	; 0x0c
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	8e 87       	std	Y+14, r24	; 0x0e
 104:	e9 e6       	ldi	r30, 0x69	; 105
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	82 60       	ori	r24, 0x02	; 2
 10c:	80 83       	st	Z, r24
 10e:	e8 9a       	sbi	0x1d, 0	; 29
 110:	ce 01       	movw	r24, r28
 112:	0e 94 f6 01 	call	0x3ec	; 0x3ec <nRF24L01_begin>
 116:	ce 01       	movw	r24, r28
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

0000011e <main>:
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	ad 97       	sbiw	r28, 0x2d	; 45
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
 132:	85 e0       	ldi	r24, 0x05	; 5
 134:	e6 e0       	ldi	r30, 0x06	; 6
 136:	f1 e0       	ldi	r31, 0x01	; 1
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	8a 95       	dec	r24
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x1e>
 144:	20 9a       	sbi	0x04, 0	; 4
 146:	28 98       	cbi	0x05, 0	; 5
 148:	78 94       	sei
 14a:	0e 94 67 00 	call	0xce	; 0xce <setup_rf>
 14e:	8c 01       	movw	r16, r24
 150:	ae 01       	movw	r20, r28
 152:	4f 5f       	subi	r20, 0xFF	; 255
 154:	5f 4f       	sbci	r21, 0xFF	; 255
 156:	60 e0       	ldi	r22, 0x00	; 0
 158:	70 e0       	ldi	r23, 0x00	; 0
 15a:	0e 94 55 01 	call	0x2aa	; 0x2aa <nRF24L01_listen>
 15e:	21 e0       	ldi	r18, 0x01	; 1
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	ae 01       	movw	r20, r28
 164:	4a 5f       	subi	r20, 0xFA	; 250
 166:	5f 4f       	sbci	r21, 0xFF	; 255
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	c8 01       	movw	r24, r16
 16c:	0e 94 47 01 	call	0x28e	; 0x28e <nRF24L01_read_register>
 170:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_INIT>
 174:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 178:	88 23       	and	r24, r24
 17a:	19 f1       	breq	.+70     	; 0x1c2 <main+0xa4>
 17c:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
 180:	13 c0       	rjmp	.+38     	; 0x1a8 <main+0x8a>
 182:	be 01       	movw	r22, r28
 184:	65 5f       	subi	r22, 0xF5	; 245
 186:	7f 4f       	sbci	r23, 0xFF	; 255
 188:	c8 01       	movw	r24, r16
 18a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <nRF24L01_read_received_data>
 18e:	28 9a       	sbi	0x05, 0	; 5
 190:	8d 85       	ldd	r24, Y+13	; 0x0d
 192:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_SEND>
 196:	8e 85       	ldd	r24, Y+14	; 0x0e
 198:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_SEND>
 19c:	8a e0       	ldi	r24, 0x0A	; 10
 19e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_SEND>
 1a2:	c8 01       	movw	r24, r16
 1a4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nRF24L01_flush_receive_message>
 1a8:	c8 01       	movw	r24, r16
 1aa:	0e 94 bc 01 	call	0x378	; 0x378 <nRF24L01_data_received>
 1ae:	81 11       	cpse	r24, r1
 1b0:	e8 cf       	rjmp	.-48     	; 0x182 <main+0x64>
 1b2:	ae 01       	movw	r20, r28
 1b4:	4f 5f       	subi	r20, 0xFF	; 255
 1b6:	5f 4f       	sbci	r21, 0xFF	; 255
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	c8 01       	movw	r24, r16
 1be:	0e 94 55 01 	call	0x2aa	; 0x2aa <nRF24L01_listen>
 1c2:	28 98       	cbi	0x05, 0	; 5
 1c4:	d7 cf       	rjmp	.-82     	; 0x174 <main+0x56>

000001c6 <__vector_1>:
inline void set_led_low(void) {
	PORTB &= ~_BV(PB0);
}

// nRF24L01 interrupt
ISR(INT0_vect) {
 1c6:	1f 92       	push	r1
 1c8:	0f 92       	push	r0
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	0f 92       	push	r0
 1ce:	11 24       	eor	r1, r1
 1d0:	8f 93       	push	r24
	rf_interrupt = true;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
}
 1d8:	8f 91       	pop	r24
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <copy_address>:
 1e4:	fc 01       	movw	r30, r24
 1e6:	a6 2f       	mov	r26, r22
 1e8:	b7 2f       	mov	r27, r23
 1ea:	9c 01       	movw	r18, r24
 1ec:	2b 5f       	subi	r18, 0xFB	; 251
 1ee:	3f 4f       	sbci	r19, 0xFF	; 255
 1f0:	91 91       	ld	r25, Z+
 1f2:	9d 93       	st	X+, r25
 1f4:	e2 17       	cp	r30, r18
 1f6:	f3 07       	cpc	r31, r19
 1f8:	d9 f7       	brne	.-10     	; 0x1f0 <copy_address+0xc>
 1fa:	08 95       	ret

000001fc <nRF24L01_init>:
 1fc:	80 e1       	ldi	r24, 0x10	; 16
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 21 03 	call	0x642	; 0x642 <malloc>
 204:	20 e1       	ldi	r18, 0x10	; 16
 206:	fc 01       	movw	r30, r24
 208:	11 92       	st	Z+, r1
 20a:	2a 95       	dec	r18
 20c:	e9 f7       	brne	.-6      	; 0x208 <nRF24L01_init+0xc>
 20e:	08 95       	ret

00000210 <nRF24L01_send_command>:
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	ec 01       	movw	r28, r24
 216:	da 01       	movw	r26, r20
 218:	e8 81       	ld	r30, Y
 21a:	f9 81       	ldd	r31, Y+1	; 0x01
 21c:	50 81       	ld	r21, Z
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0a 80       	ldd	r0, Y+2	; 0x02
 224:	02 c0       	rjmp	.+4      	; 0x22a <nRF24L01_send_command+0x1a>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	0a 94       	dec	r0
 22c:	e2 f7       	brpl	.-8      	; 0x226 <nRF24L01_send_command+0x16>
 22e:	80 95       	com	r24
 230:	85 23       	and	r24, r21
 232:	80 83       	st	Z, r24
 234:	6e bd       	out	0x2e, r22	; 46
 236:	0d b4       	in	r0, 0x2d	; 45
 238:	07 fe       	sbrs	r0, 7
 23a:	fd cf       	rjmp	.-6      	; 0x236 <nRF24L01_send_command+0x26>
 23c:	8e b5       	in	r24, 0x2e	; 46
 23e:	8f 87       	std	Y+15, r24	; 0x0f
 240:	21 15       	cp	r18, r1
 242:	31 05       	cpc	r19, r1
 244:	79 f0       	breq	.+30     	; 0x264 <nRF24L01_send_command+0x54>
 246:	fd 01       	movw	r30, r26
 248:	2a 0f       	add	r18, r26
 24a:	3b 1f       	adc	r19, r27
 24c:	df 01       	movw	r26, r30
 24e:	90 81       	ld	r25, Z
 250:	9e bd       	out	0x2e, r25	; 46
 252:	0d b4       	in	r0, 0x2d	; 45
 254:	07 fe       	sbrs	r0, 7
 256:	fd cf       	rjmp	.-6      	; 0x252 <nRF24L01_send_command+0x42>
 258:	9e b5       	in	r25, 0x2e	; 46
 25a:	9c 93       	st	X, r25
 25c:	31 96       	adiw	r30, 0x01	; 1
 25e:	e2 17       	cp	r30, r18
 260:	f3 07       	cpc	r31, r19
 262:	a1 f7       	brne	.-24     	; 0x24c <nRF24L01_send_command+0x3c>
 264:	e8 81       	ld	r30, Y
 266:	f9 81       	ldd	r31, Y+1	; 0x01
 268:	20 81       	ld	r18, Z
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0a 80       	ldd	r0, Y+2	; 0x02
 270:	02 c0       	rjmp	.+4      	; 0x276 <nRF24L01_send_command+0x66>
 272:	88 0f       	add	r24, r24
 274:	99 1f       	adc	r25, r25
 276:	0a 94       	dec	r0
 278:	e2 f7       	brpl	.-8      	; 0x272 <nRF24L01_send_command+0x62>
 27a:	82 2b       	or	r24, r18
 27c:	80 83       	st	Z, r24
 27e:	8f 85       	ldd	r24, Y+15	; 0x0f
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <nRF24L01_write_register>:
 286:	60 62       	ori	r22, 0x20	; 32
 288:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 28c:	08 95       	ret

0000028e <nRF24L01_read_register>:
 28e:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 292:	08 95       	ret

00000294 <nRF24L01_no_op>:
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	50 e0       	ldi	r21, 0x00	; 0
 29c:	6f ef       	ldi	r22, 0xFF	; 255
 29e:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 2a2:	08 95       	ret

000002a4 <nRF24L01_update_status>:
 2a4:	0e 94 4a 01 	call	0x294	; 0x294 <nRF24L01_no_op>
 2a8:	08 95       	ret

000002aa <nRF24L01_listen>:
 2aa:	df 92       	push	r13
 2ac:	ef 92       	push	r14
 2ae:	ff 92       	push	r15
 2b0:	0f 93       	push	r16
 2b2:	1f 93       	push	r17
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	00 d0       	rcall	.+0      	; 0x2ba <nRF24L01_listen+0x10>
 2ba:	00 d0       	rcall	.+0      	; 0x2bc <nRF24L01_listen+0x12>
 2bc:	00 d0       	rcall	.+0      	; 0x2be <nRF24L01_listen+0x14>
 2be:	cd b7       	in	r28, 0x3d	; 61
 2c0:	de b7       	in	r29, 0x3e	; 62
 2c2:	7c 01       	movw	r14, r24
 2c4:	d6 2e       	mov	r13, r22
 2c6:	ca 01       	movw	r24, r20
 2c8:	be 01       	movw	r22, r28
 2ca:	6f 5f       	subi	r22, 0xFF	; 255
 2cc:	7f 4f       	sbci	r23, 0xFF	; 255
 2ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <copy_address>
 2d2:	6a e0       	ldi	r22, 0x0A	; 10
 2d4:	6d 0d       	add	r22, r13
 2d6:	25 e0       	ldi	r18, 0x05	; 5
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	ae 01       	movw	r20, r28
 2dc:	4f 5f       	subi	r20, 0xFF	; 255
 2de:	5f 4f       	sbci	r21, 0xFF	; 255
 2e0:	c7 01       	movw	r24, r14
 2e2:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 2e6:	21 e0       	ldi	r18, 0x01	; 1
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	ae 01       	movw	r20, r28
 2ec:	4a 5f       	subi	r20, 0xFA	; 250
 2ee:	5f 4f       	sbci	r21, 0xFF	; 255
 2f0:	62 e0       	ldi	r22, 0x02	; 2
 2f2:	c7 01       	movw	r24, r14
 2f4:	0e 94 47 01 	call	0x28e	; 0x28e <nRF24L01_read_register>
 2f8:	01 e0       	ldi	r16, 0x01	; 1
 2fa:	10 e0       	ldi	r17, 0x00	; 0
 2fc:	c8 01       	movw	r24, r16
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <nRF24L01_listen+0x5a>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	da 94       	dec	r13
 306:	e2 f7       	brpl	.-8      	; 0x300 <nRF24L01_listen+0x56>
 308:	9e 81       	ldd	r25, Y+6	; 0x06
 30a:	89 2b       	or	r24, r25
 30c:	8e 83       	std	Y+6, r24	; 0x06
 30e:	21 e0       	ldi	r18, 0x01	; 1
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	ae 01       	movw	r20, r28
 314:	4a 5f       	subi	r20, 0xFA	; 250
 316:	5f 4f       	sbci	r21, 0xFF	; 255
 318:	62 e0       	ldi	r22, 0x02	; 2
 31a:	c7 01       	movw	r24, r14
 31c:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 320:	d7 01       	movw	r26, r14
 322:	13 96       	adiw	r26, 0x03	; 3
 324:	ed 91       	ld	r30, X+
 326:	fc 91       	ld	r31, X
 328:	14 97       	sbiw	r26, 0x04	; 4
 32a:	80 81       	ld	r24, Z
 32c:	15 96       	adiw	r26, 0x05	; 5
 32e:	0c 90       	ld	r0, X
 330:	02 c0       	rjmp	.+4      	; 0x336 <nRF24L01_listen+0x8c>
 332:	00 0f       	add	r16, r16
 334:	11 1f       	adc	r17, r17
 336:	0a 94       	dec	r0
 338:	e2 f7       	brpl	.-8      	; 0x332 <nRF24L01_listen+0x88>
 33a:	08 2b       	or	r16, r24
 33c:	00 83       	st	Z, r16
 33e:	26 96       	adiw	r28, 0x06	; 6
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	ff 90       	pop	r15
 354:	ef 90       	pop	r14
 356:	df 90       	pop	r13
 358:	08 95       	ret

0000035a <nRF24L01_pipe_number_received>:
 35a:	fc 01       	movw	r30, r24
 35c:	27 85       	ldd	r18, Z+15	; 0x0f
 35e:	2e 70       	andi	r18, 0x0E	; 14
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	35 95       	asr	r19
 364:	27 95       	ror	r18
 366:	26 30       	cpi	r18, 0x06	; 6
 368:	31 05       	cpc	r19, r1
 36a:	1c f4       	brge	.+6      	; 0x372 <nRF24L01_pipe_number_received+0x18>
 36c:	82 2f       	mov	r24, r18
 36e:	93 2f       	mov	r25, r19
 370:	08 95       	ret
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	9f ef       	ldi	r25, 0xFF	; 255
 376:	08 95       	ret

00000378 <nRF24L01_data_received>:
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	ec 01       	movw	r28, r24
 37e:	eb 81       	ldd	r30, Y+3	; 0x03
 380:	fc 81       	ldd	r31, Y+4	; 0x04
 382:	20 81       	ld	r18, Z
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	0d 80       	ldd	r0, Y+5	; 0x05
 38a:	02 c0       	rjmp	.+4      	; 0x390 <nRF24L01_data_received+0x18>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <nRF24L01_data_received+0x14>
 394:	80 95       	com	r24
 396:	82 23       	and	r24, r18
 398:	80 83       	st	Z, r24
 39a:	ce 01       	movw	r24, r28
 39c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <nRF24L01_update_status>
 3a0:	ce 01       	movw	r24, r28
 3a2:	0e 94 ad 01 	call	0x35a	; 0x35a <nRF24L01_pipe_number_received>
 3a6:	89 2f       	mov	r24, r25
 3a8:	80 95       	com	r24
 3aa:	88 1f       	adc	r24, r24
 3ac:	88 27       	eor	r24, r24
 3ae:	88 1f       	adc	r24, r24
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	08 95       	ret

000003b6 <nRF24L01_flush_receive_message>:
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	40 e0       	ldi	r20, 0x00	; 0
 3bc:	50 e0       	ldi	r21, 0x00	; 0
 3be:	62 ee       	ldi	r22, 0xE2	; 226
 3c0:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 3c4:	08 95       	ret

000003c6 <nRF24L01_clear_interrupts>:
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	1f 92       	push	r1
 3cc:	cd b7       	in	r28, 0x3d	; 61
 3ce:	de b7       	in	r29, 0x3e	; 62
 3d0:	20 e7       	ldi	r18, 0x70	; 112
 3d2:	29 83       	std	Y+1, r18	; 0x01
 3d4:	21 e0       	ldi	r18, 0x01	; 1
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	ae 01       	movw	r20, r28
 3da:	4f 5f       	subi	r20, 0xFF	; 255
 3dc:	5f 4f       	sbci	r21, 0xFF	; 255
 3de:	67 e0       	ldi	r22, 0x07	; 7
 3e0:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 3e4:	0f 90       	pop	r0
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	08 95       	ret

000003ec <nRF24L01_begin>:
 3ec:	ff 92       	push	r15
 3ee:	0f 93       	push	r16
 3f0:	1f 93       	push	r17
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	1f 92       	push	r1
 3f8:	cd b7       	in	r28, 0x3d	; 61
 3fa:	de b7       	in	r29, 0x3e	; 62
 3fc:	8c 01       	movw	r16, r24
 3fe:	dc 01       	movw	r26, r24
 400:	ed 91       	ld	r30, X+
 402:	fc 91       	ld	r31, X
 404:	11 97       	sbiw	r26, 0x01	; 1
 406:	42 91       	ld	r20, -Z
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	9c 01       	movw	r18, r24
 40e:	12 96       	adiw	r26, 0x02	; 2
 410:	0c 90       	ld	r0, X
 412:	12 97       	sbiw	r26, 0x02	; 2
 414:	02 c0       	rjmp	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	22 0f       	add	r18, r18
 418:	33 1f       	adc	r19, r19
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 41e:	24 2b       	or	r18, r20
 420:	20 83       	st	Z, r18
 422:	13 96       	adiw	r26, 0x03	; 3
 424:	ed 91       	ld	r30, X+
 426:	fc 91       	ld	r31, X
 428:	14 97       	sbiw	r26, 0x04	; 4
 42a:	42 91       	ld	r20, -Z
 42c:	9c 01       	movw	r18, r24
 42e:	15 96       	adiw	r26, 0x05	; 5
 430:	0c 90       	ld	r0, X
 432:	15 97       	sbiw	r26, 0x05	; 5
 434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	22 0f       	add	r18, r18
 438:	33 1f       	adc	r19, r19
 43a:	0a 94       	dec	r0
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 43e:	24 2b       	or	r18, r20
 440:	20 83       	st	Z, r18
 442:	ed 91       	ld	r30, X+
 444:	fc 91       	ld	r31, X
 446:	11 97       	sbiw	r26, 0x01	; 1
 448:	40 81       	ld	r20, Z
 44a:	9c 01       	movw	r18, r24
 44c:	12 96       	adiw	r26, 0x02	; 2
 44e:	0c 90       	ld	r0, X
 450:	12 97       	sbiw	r26, 0x02	; 2
 452:	02 c0       	rjmp	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 454:	22 0f       	add	r18, r18
 456:	33 1f       	adc	r19, r19
 458:	0a 94       	dec	r0
 45a:	e2 f7       	brpl	.-8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 45c:	24 2b       	or	r18, r20
 45e:	20 83       	st	Z, r18
 460:	13 96       	adiw	r26, 0x03	; 3
 462:	ed 91       	ld	r30, X+
 464:	fc 91       	ld	r31, X
 466:	14 97       	sbiw	r26, 0x04	; 4
 468:	30 81       	ld	r19, Z
 46a:	ac 01       	movw	r20, r24
 46c:	15 96       	adiw	r26, 0x05	; 5
 46e:	0c 90       	ld	r0, X
 470:	15 97       	sbiw	r26, 0x05	; 5
 472:	02 c0       	rjmp	.+4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 474:	44 0f       	add	r20, r20
 476:	55 1f       	adc	r21, r21
 478:	0a 94       	dec	r0
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 47c:	24 2f       	mov	r18, r20
 47e:	20 95       	com	r18
 480:	23 23       	and	r18, r19
 482:	20 83       	st	Z, r18
 484:	2c b5       	in	r18, 0x2c	; 44
 486:	20 61       	ori	r18, 0x10	; 16
 488:	2c bd       	out	0x2c, r18	; 44
 48a:	2c b5       	in	r18, 0x2c	; 44
 48c:	20 64       	ori	r18, 0x40	; 64
 48e:	2c bd       	out	0x2c, r18	; 44
 490:	16 96       	adiw	r26, 0x06	; 6
 492:	ed 91       	ld	r30, X+
 494:	fc 91       	ld	r31, X
 496:	17 97       	sbiw	r26, 0x07	; 7
 498:	42 91       	ld	r20, -Z
 49a:	9c 01       	movw	r18, r24
 49c:	18 96       	adiw	r26, 0x08	; 8
 49e:	0c 90       	ld	r0, X
 4a0:	18 97       	sbiw	r26, 0x08	; 8
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	22 0f       	add	r18, r18
 4a6:	33 1f       	adc	r19, r19
 4a8:	0a 94       	dec	r0
 4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4ac:	24 2b       	or	r18, r20
 4ae:	20 83       	st	Z, r18
 4b0:	19 96       	adiw	r26, 0x09	; 9
 4b2:	ed 91       	ld	r30, X+
 4b4:	fc 91       	ld	r31, X
 4b6:	1a 97       	sbiw	r26, 0x0a	; 10
 4b8:	42 91       	ld	r20, -Z
 4ba:	9c 01       	movw	r18, r24
 4bc:	1b 96       	adiw	r26, 0x0b	; 11
 4be:	0c 90       	ld	r0, X
 4c0:	1b 97       	sbiw	r26, 0x0b	; 11
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c4:	22 0f       	add	r18, r18
 4c6:	33 1f       	adc	r19, r19
 4c8:	0a 94       	dec	r0
 4ca:	e2 f7       	brpl	.-8      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4cc:	24 2b       	or	r18, r20
 4ce:	20 83       	st	Z, r18
 4d0:	1c 96       	adiw	r26, 0x0c	; 12
 4d2:	ed 91       	ld	r30, X+
 4d4:	fc 91       	ld	r31, X
 4d6:	1d 97       	sbiw	r26, 0x0d	; 13
 4d8:	22 91       	ld	r18, -Z
 4da:	1e 96       	adiw	r26, 0x0e	; 14
 4dc:	0c 90       	ld	r0, X
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e0:	88 0f       	add	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	0a 94       	dec	r0
 4e6:	e2 f7       	brpl	.-8      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4e8:	80 95       	com	r24
 4ea:	82 23       	and	r24, r18
 4ec:	80 83       	st	Z, r24
 4ee:	8c b5       	in	r24, 0x2c	; 44
 4f0:	87 7f       	andi	r24, 0xF7	; 247
 4f2:	8c bd       	out	0x2c, r24	; 44
 4f4:	8c b5       	in	r24, 0x2c	; 44
 4f6:	8b 7f       	andi	r24, 0xFB	; 251
 4f8:	8c bd       	out	0x2c, r24	; 44
 4fa:	8c b5       	in	r24, 0x2c	; 44
 4fc:	8e 7f       	andi	r24, 0xFE	; 254
 4fe:	8c bd       	out	0x2c, r24	; 44
 500:	8c b5       	in	r24, 0x2c	; 44
 502:	8d 7f       	andi	r24, 0xFD	; 253
 504:	8c bd       	out	0x2c, r24	; 44
 506:	8d b5       	in	r24, 0x2d	; 45
 508:	81 60       	ori	r24, 0x01	; 1
 50a:	8d bd       	out	0x2d, r24	; 45
 50c:	8c b5       	in	r24, 0x2c	; 44
 50e:	8f 7d       	andi	r24, 0xDF	; 223
 510:	8c bd       	out	0x2c, r24	; 44
 512:	20 e0       	ldi	r18, 0x00	; 0
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	40 e0       	ldi	r20, 0x00	; 0
 518:	50 e0       	ldi	r21, 0x00	; 0
 51a:	62 ee       	ldi	r22, 0xE2	; 226
 51c:	c8 01       	movw	r24, r16
 51e:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 522:	20 e0       	ldi	r18, 0x00	; 0
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	40 e0       	ldi	r20, 0x00	; 0
 528:	50 e0       	ldi	r21, 0x00	; 0
 52a:	61 ee       	ldi	r22, 0xE1	; 225
 52c:	c8 01       	movw	r24, r16
 52e:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 532:	c8 01       	movw	r24, r16
 534:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <nRF24L01_clear_interrupts>
 538:	8f e0       	ldi	r24, 0x0F	; 15
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	21 e0       	ldi	r18, 0x01	; 1
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	ae 01       	movw	r20, r28
 542:	4f 5f       	subi	r20, 0xFF	; 255
 544:	5f 4f       	sbci	r21, 0xFF	; 255
 546:	60 e0       	ldi	r22, 0x00	; 0
 548:	c8 01       	movw	r24, r16
 54a:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 54e:	0f 2e       	mov	r0, r31
 550:	ff e3       	ldi	r31, 0x3F	; 63
 552:	ff 2e       	mov	r15, r31
 554:	f0 2d       	mov	r31, r0
 556:	f9 82       	std	Y+1, r15	; 0x01
 558:	21 e0       	ldi	r18, 0x01	; 1
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	ae 01       	movw	r20, r28
 55e:	4f 5f       	subi	r20, 0xFF	; 255
 560:	5f 4f       	sbci	r21, 0xFF	; 255
 562:	61 e0       	ldi	r22, 0x01	; 1
 564:	c8 01       	movw	r24, r16
 566:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 56a:	f9 82       	std	Y+1, r15	; 0x01
 56c:	21 e0       	ldi	r18, 0x01	; 1
 56e:	30 e0       	ldi	r19, 0x00	; 0
 570:	ae 01       	movw	r20, r28
 572:	4f 5f       	subi	r20, 0xFF	; 255
 574:	5f 4f       	sbci	r21, 0xFF	; 255
 576:	6c e1       	ldi	r22, 0x1C	; 28
 578:	c8 01       	movw	r24, r16
 57a:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 57e:	84 e0       	ldi	r24, 0x04	; 4
 580:	89 83       	std	Y+1, r24	; 0x01
 582:	21 e0       	ldi	r18, 0x01	; 1
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	ae 01       	movw	r20, r28
 588:	4f 5f       	subi	r20, 0xFF	; 255
 58a:	5f 4f       	sbci	r21, 0xFF	; 255
 58c:	6d e1       	ldi	r22, 0x1D	; 29
 58e:	c8 01       	movw	r24, r16
 590:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 594:	19 82       	std	Y+1, r1	; 0x01
 596:	21 e0       	ldi	r18, 0x01	; 1
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	ae 01       	movw	r20, r28
 59c:	4f 5f       	subi	r20, 0xFF	; 255
 59e:	5f 4f       	sbci	r21, 0xFF	; 255
 5a0:	62 e0       	ldi	r22, 0x02	; 2
 5a2:	c8 01       	movw	r24, r16
 5a4:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 5a8:	0f 90       	pop	r0
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	0f 91       	pop	r16
 5b2:	ff 90       	pop	r15
 5b4:	08 95       	ret

000005b6 <nRF24L01_clear_receive_interrupt>:
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	1f 92       	push	r1
 5bc:	cd b7       	in	r28, 0x3d	; 61
 5be:	de b7       	in	r29, 0x3e	; 62
 5c0:	fc 01       	movw	r30, r24
 5c2:	97 85       	ldd	r25, Z+15	; 0x0f
 5c4:	90 64       	ori	r25, 0x40	; 64
 5c6:	99 83       	std	Y+1, r25	; 0x01
 5c8:	21 e0       	ldi	r18, 0x01	; 1
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	ae 01       	movw	r20, r28
 5ce:	4f 5f       	subi	r20, 0xFF	; 255
 5d0:	5f 4f       	sbci	r21, 0xFF	; 255
 5d2:	67 e0       	ldi	r22, 0x07	; 7
 5d4:	cf 01       	movw	r24, r30
 5d6:	0e 94 43 01 	call	0x286	; 0x286 <nRF24L01_write_register>
 5da:	0f 90       	pop	r0
 5dc:	df 91       	pop	r29
 5de:	cf 91       	pop	r28
 5e0:	08 95       	ret

000005e2 <nRF24L01_read_received_data>:
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	8c 01       	movw	r16, r24
 5ec:	eb 01       	movw	r28, r22
 5ee:	0e 94 ad 01 	call	0x35a	; 0x35a <nRF24L01_pipe_number_received>
 5f2:	99 83       	std	Y+1, r25	; 0x01
 5f4:	88 83       	st	Y, r24
 5f6:	c8 01       	movw	r24, r16
 5f8:	0e 94 db 02 	call	0x5b6	; 0x5b6 <nRF24L01_clear_receive_interrupt>
 5fc:	88 81       	ld	r24, Y
 5fe:	99 81       	ldd	r25, Y+1	; 0x01
 600:	99 23       	and	r25, r25
 602:	1c f4       	brge	.+6      	; 0x60a <nRF24L01_read_received_data+0x28>
 604:	1a a2       	std	Y+34, r1	; 0x22
 606:	80 e0       	ldi	r24, 0x00	; 0
 608:	17 c0       	rjmp	.+46     	; 0x638 <nRF24L01_read_received_data+0x56>
 60a:	21 e0       	ldi	r18, 0x01	; 1
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	ae 01       	movw	r20, r28
 610:	4e 5d       	subi	r20, 0xDE	; 222
 612:	5f 4f       	sbci	r21, 0xFF	; 255
 614:	60 e6       	ldi	r22, 0x60	; 96
 616:	c8 01       	movw	r24, r16
 618:	0e 94 47 01 	call	0x28e	; 0x28e <nRF24L01_read_register>
 61c:	2a a1       	ldd	r18, Y+34	; 0x22
 61e:	22 23       	and	r18, r18
 620:	51 f0       	breq	.+20     	; 0x636 <nRF24L01_read_received_data+0x54>
 622:	30 e0       	ldi	r19, 0x00	; 0
 624:	ae 01       	movw	r20, r28
 626:	4e 5f       	subi	r20, 0xFE	; 254
 628:	5f 4f       	sbci	r21, 0xFF	; 255
 62a:	61 e6       	ldi	r22, 0x61	; 97
 62c:	c8 01       	movw	r24, r16
 62e:	0e 94 08 01 	call	0x210	; 0x210 <nRF24L01_send_command>
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	01 c0       	rjmp	.+2      	; 0x638 <nRF24L01_read_received_data+0x56>
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	1f 91       	pop	r17
 63e:	0f 91       	pop	r16
 640:	08 95       	ret

00000642 <malloc>:
 642:	0f 93       	push	r16
 644:	1f 93       	push	r17
 646:	cf 93       	push	r28
 648:	df 93       	push	r29
 64a:	82 30       	cpi	r24, 0x02	; 2
 64c:	91 05       	cpc	r25, r1
 64e:	10 f4       	brcc	.+4      	; 0x654 <malloc+0x12>
 650:	82 e0       	ldi	r24, 0x02	; 2
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <__flp>
 658:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <__flp+0x1>
 65c:	20 e0       	ldi	r18, 0x00	; 0
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	a0 e0       	ldi	r26, 0x00	; 0
 662:	b0 e0       	ldi	r27, 0x00	; 0
 664:	30 97       	sbiw	r30, 0x00	; 0
 666:	19 f1       	breq	.+70     	; 0x6ae <malloc+0x6c>
 668:	40 81       	ld	r20, Z
 66a:	51 81       	ldd	r21, Z+1	; 0x01
 66c:	02 81       	ldd	r16, Z+2	; 0x02
 66e:	13 81       	ldd	r17, Z+3	; 0x03
 670:	48 17       	cp	r20, r24
 672:	59 07       	cpc	r21, r25
 674:	c8 f0       	brcs	.+50     	; 0x6a8 <malloc+0x66>
 676:	84 17       	cp	r24, r20
 678:	95 07       	cpc	r25, r21
 67a:	69 f4       	brne	.+26     	; 0x696 <malloc+0x54>
 67c:	10 97       	sbiw	r26, 0x00	; 0
 67e:	31 f0       	breq	.+12     	; 0x68c <malloc+0x4a>
 680:	12 96       	adiw	r26, 0x02	; 2
 682:	0c 93       	st	X, r16
 684:	12 97       	sbiw	r26, 0x02	; 2
 686:	13 96       	adiw	r26, 0x03	; 3
 688:	1c 93       	st	X, r17
 68a:	27 c0       	rjmp	.+78     	; 0x6da <malloc+0x98>
 68c:	00 93 0f 01 	sts	0x010F, r16	; 0x80010f <__flp>
 690:	10 93 10 01 	sts	0x0110, r17	; 0x800110 <__flp+0x1>
 694:	22 c0       	rjmp	.+68     	; 0x6da <malloc+0x98>
 696:	21 15       	cp	r18, r1
 698:	31 05       	cpc	r19, r1
 69a:	19 f0       	breq	.+6      	; 0x6a2 <malloc+0x60>
 69c:	42 17       	cp	r20, r18
 69e:	53 07       	cpc	r21, r19
 6a0:	18 f4       	brcc	.+6      	; 0x6a8 <malloc+0x66>
 6a2:	9a 01       	movw	r18, r20
 6a4:	bd 01       	movw	r22, r26
 6a6:	ef 01       	movw	r28, r30
 6a8:	df 01       	movw	r26, r30
 6aa:	f8 01       	movw	r30, r16
 6ac:	db cf       	rjmp	.-74     	; 0x664 <malloc+0x22>
 6ae:	21 15       	cp	r18, r1
 6b0:	31 05       	cpc	r19, r1
 6b2:	f9 f0       	breq	.+62     	; 0x6f2 <malloc+0xb0>
 6b4:	28 1b       	sub	r18, r24
 6b6:	39 0b       	sbc	r19, r25
 6b8:	24 30       	cpi	r18, 0x04	; 4
 6ba:	31 05       	cpc	r19, r1
 6bc:	80 f4       	brcc	.+32     	; 0x6de <malloc+0x9c>
 6be:	8a 81       	ldd	r24, Y+2	; 0x02
 6c0:	9b 81       	ldd	r25, Y+3	; 0x03
 6c2:	61 15       	cp	r22, r1
 6c4:	71 05       	cpc	r23, r1
 6c6:	21 f0       	breq	.+8      	; 0x6d0 <malloc+0x8e>
 6c8:	fb 01       	movw	r30, r22
 6ca:	93 83       	std	Z+3, r25	; 0x03
 6cc:	82 83       	std	Z+2, r24	; 0x02
 6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <malloc+0x96>
 6d0:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <__flp+0x1>
 6d4:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <__flp>
 6d8:	fe 01       	movw	r30, r28
 6da:	32 96       	adiw	r30, 0x02	; 2
 6dc:	44 c0       	rjmp	.+136    	; 0x766 <malloc+0x124>
 6de:	fe 01       	movw	r30, r28
 6e0:	e2 0f       	add	r30, r18
 6e2:	f3 1f       	adc	r31, r19
 6e4:	81 93       	st	Z+, r24
 6e6:	91 93       	st	Z+, r25
 6e8:	22 50       	subi	r18, 0x02	; 2
 6ea:	31 09       	sbc	r19, r1
 6ec:	39 83       	std	Y+1, r19	; 0x01
 6ee:	28 83       	st	Y, r18
 6f0:	3a c0       	rjmp	.+116    	; 0x766 <malloc+0x124>
 6f2:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 6f6:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 6fa:	23 2b       	or	r18, r19
 6fc:	41 f4       	brne	.+16     	; 0x70e <malloc+0xcc>
 6fe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 702:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 706:	30 93 0e 01 	sts	0x010E, r19	; 0x80010e <__brkval+0x1>
 70a:	20 93 0d 01 	sts	0x010D, r18	; 0x80010d <__brkval>
 70e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 712:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 716:	21 15       	cp	r18, r1
 718:	31 05       	cpc	r19, r1
 71a:	41 f4       	brne	.+16     	; 0x72c <malloc+0xea>
 71c:	2d b7       	in	r18, 0x3d	; 61
 71e:	3e b7       	in	r19, 0x3e	; 62
 720:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 724:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 728:	24 1b       	sub	r18, r20
 72a:	35 0b       	sbc	r19, r21
 72c:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <__brkval>
 730:	f0 91 0e 01 	lds	r31, 0x010E	; 0x80010e <__brkval+0x1>
 734:	e2 17       	cp	r30, r18
 736:	f3 07       	cpc	r31, r19
 738:	a0 f4       	brcc	.+40     	; 0x762 <malloc+0x120>
 73a:	2e 1b       	sub	r18, r30
 73c:	3f 0b       	sbc	r19, r31
 73e:	28 17       	cp	r18, r24
 740:	39 07       	cpc	r19, r25
 742:	78 f0       	brcs	.+30     	; 0x762 <malloc+0x120>
 744:	ac 01       	movw	r20, r24
 746:	4e 5f       	subi	r20, 0xFE	; 254
 748:	5f 4f       	sbci	r21, 0xFF	; 255
 74a:	24 17       	cp	r18, r20
 74c:	35 07       	cpc	r19, r21
 74e:	48 f0       	brcs	.+18     	; 0x762 <malloc+0x120>
 750:	4e 0f       	add	r20, r30
 752:	5f 1f       	adc	r21, r31
 754:	50 93 0e 01 	sts	0x010E, r21	; 0x80010e <__brkval+0x1>
 758:	40 93 0d 01 	sts	0x010D, r20	; 0x80010d <__brkval>
 75c:	81 93       	st	Z+, r24
 75e:	91 93       	st	Z+, r25
 760:	02 c0       	rjmp	.+4      	; 0x766 <malloc+0x124>
 762:	e0 e0       	ldi	r30, 0x00	; 0
 764:	f0 e0       	ldi	r31, 0x00	; 0
 766:	cf 01       	movw	r24, r30
 768:	df 91       	pop	r29
 76a:	cf 91       	pop	r28
 76c:	1f 91       	pop	r17
 76e:	0f 91       	pop	r16
 770:	08 95       	ret

00000772 <free>:
 772:	cf 93       	push	r28
 774:	df 93       	push	r29
 776:	00 97       	sbiw	r24, 0x00	; 0
 778:	09 f4       	brne	.+2      	; 0x77c <free+0xa>
 77a:	81 c0       	rjmp	.+258    	; 0x87e <free+0x10c>
 77c:	fc 01       	movw	r30, r24
 77e:	32 97       	sbiw	r30, 0x02	; 2
 780:	13 82       	std	Z+3, r1	; 0x03
 782:	12 82       	std	Z+2, r1	; 0x02
 784:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <__flp>
 788:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <__flp+0x1>
 78c:	10 97       	sbiw	r26, 0x00	; 0
 78e:	81 f4       	brne	.+32     	; 0x7b0 <free+0x3e>
 790:	20 81       	ld	r18, Z
 792:	31 81       	ldd	r19, Z+1	; 0x01
 794:	82 0f       	add	r24, r18
 796:	93 1f       	adc	r25, r19
 798:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 79c:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 7a0:	28 17       	cp	r18, r24
 7a2:	39 07       	cpc	r19, r25
 7a4:	51 f5       	brne	.+84     	; 0x7fa <free+0x88>
 7a6:	f0 93 0e 01 	sts	0x010E, r31	; 0x80010e <__brkval+0x1>
 7aa:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <__brkval>
 7ae:	67 c0       	rjmp	.+206    	; 0x87e <free+0x10c>
 7b0:	ed 01       	movw	r28, r26
 7b2:	20 e0       	ldi	r18, 0x00	; 0
 7b4:	30 e0       	ldi	r19, 0x00	; 0
 7b6:	ce 17       	cp	r28, r30
 7b8:	df 07       	cpc	r29, r31
 7ba:	40 f4       	brcc	.+16     	; 0x7cc <free+0x5a>
 7bc:	4a 81       	ldd	r20, Y+2	; 0x02
 7be:	5b 81       	ldd	r21, Y+3	; 0x03
 7c0:	9e 01       	movw	r18, r28
 7c2:	41 15       	cp	r20, r1
 7c4:	51 05       	cpc	r21, r1
 7c6:	f1 f0       	breq	.+60     	; 0x804 <free+0x92>
 7c8:	ea 01       	movw	r28, r20
 7ca:	f5 cf       	rjmp	.-22     	; 0x7b6 <free+0x44>
 7cc:	d3 83       	std	Z+3, r29	; 0x03
 7ce:	c2 83       	std	Z+2, r28	; 0x02
 7d0:	40 81       	ld	r20, Z
 7d2:	51 81       	ldd	r21, Z+1	; 0x01
 7d4:	84 0f       	add	r24, r20
 7d6:	95 1f       	adc	r25, r21
 7d8:	c8 17       	cp	r28, r24
 7da:	d9 07       	cpc	r29, r25
 7dc:	59 f4       	brne	.+22     	; 0x7f4 <free+0x82>
 7de:	88 81       	ld	r24, Y
 7e0:	99 81       	ldd	r25, Y+1	; 0x01
 7e2:	84 0f       	add	r24, r20
 7e4:	95 1f       	adc	r25, r21
 7e6:	02 96       	adiw	r24, 0x02	; 2
 7e8:	91 83       	std	Z+1, r25	; 0x01
 7ea:	80 83       	st	Z, r24
 7ec:	8a 81       	ldd	r24, Y+2	; 0x02
 7ee:	9b 81       	ldd	r25, Y+3	; 0x03
 7f0:	93 83       	std	Z+3, r25	; 0x03
 7f2:	82 83       	std	Z+2, r24	; 0x02
 7f4:	21 15       	cp	r18, r1
 7f6:	31 05       	cpc	r19, r1
 7f8:	29 f4       	brne	.+10     	; 0x804 <free+0x92>
 7fa:	f0 93 10 01 	sts	0x0110, r31	; 0x800110 <__flp+0x1>
 7fe:	e0 93 0f 01 	sts	0x010F, r30	; 0x80010f <__flp>
 802:	3d c0       	rjmp	.+122    	; 0x87e <free+0x10c>
 804:	e9 01       	movw	r28, r18
 806:	fb 83       	std	Y+3, r31	; 0x03
 808:	ea 83       	std	Y+2, r30	; 0x02
 80a:	49 91       	ld	r20, Y+
 80c:	59 91       	ld	r21, Y+
 80e:	c4 0f       	add	r28, r20
 810:	d5 1f       	adc	r29, r21
 812:	ec 17       	cp	r30, r28
 814:	fd 07       	cpc	r31, r29
 816:	61 f4       	brne	.+24     	; 0x830 <free+0xbe>
 818:	80 81       	ld	r24, Z
 81a:	91 81       	ldd	r25, Z+1	; 0x01
 81c:	84 0f       	add	r24, r20
 81e:	95 1f       	adc	r25, r21
 820:	02 96       	adiw	r24, 0x02	; 2
 822:	e9 01       	movw	r28, r18
 824:	99 83       	std	Y+1, r25	; 0x01
 826:	88 83       	st	Y, r24
 828:	82 81       	ldd	r24, Z+2	; 0x02
 82a:	93 81       	ldd	r25, Z+3	; 0x03
 82c:	9b 83       	std	Y+3, r25	; 0x03
 82e:	8a 83       	std	Y+2, r24	; 0x02
 830:	e0 e0       	ldi	r30, 0x00	; 0
 832:	f0 e0       	ldi	r31, 0x00	; 0
 834:	12 96       	adiw	r26, 0x02	; 2
 836:	8d 91       	ld	r24, X+
 838:	9c 91       	ld	r25, X
 83a:	13 97       	sbiw	r26, 0x03	; 3
 83c:	00 97       	sbiw	r24, 0x00	; 0
 83e:	19 f0       	breq	.+6      	; 0x846 <free+0xd4>
 840:	fd 01       	movw	r30, r26
 842:	dc 01       	movw	r26, r24
 844:	f7 cf       	rjmp	.-18     	; 0x834 <free+0xc2>
 846:	8d 91       	ld	r24, X+
 848:	9c 91       	ld	r25, X
 84a:	11 97       	sbiw	r26, 0x01	; 1
 84c:	9d 01       	movw	r18, r26
 84e:	2e 5f       	subi	r18, 0xFE	; 254
 850:	3f 4f       	sbci	r19, 0xFF	; 255
 852:	82 0f       	add	r24, r18
 854:	93 1f       	adc	r25, r19
 856:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 85a:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 85e:	28 17       	cp	r18, r24
 860:	39 07       	cpc	r19, r25
 862:	69 f4       	brne	.+26     	; 0x87e <free+0x10c>
 864:	30 97       	sbiw	r30, 0x00	; 0
 866:	29 f4       	brne	.+10     	; 0x872 <free+0x100>
 868:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__flp+0x1>
 86c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp>
 870:	02 c0       	rjmp	.+4      	; 0x876 <free+0x104>
 872:	13 82       	std	Z+3, r1	; 0x03
 874:	12 82       	std	Z+2, r1	; 0x02
 876:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <__brkval+0x1>
 87a:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <__brkval>
 87e:	df 91       	pop	r29
 880:	cf 91       	pop	r28
 882:	08 95       	ret

00000884 <_exit>:
 884:	f8 94       	cli

00000886 <__stop_program>:
 886:	ff cf       	rjmp	.-2      	; 0x886 <__stop_program>
